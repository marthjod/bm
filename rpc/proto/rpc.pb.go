// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rpc.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type NetworkAddress struct {
	Time                 uint64   `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Stream               uint32   `protobuf:"varint,2,opt,name=stream,proto3" json:"stream,omitempty"`
	Services             uint64   `protobuf:"varint,3,opt,name=services,proto3" json:"services,omitempty"`
	IpAddress            []byte   `protobuf:"bytes,4,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Port                 int32    `protobuf:"fixed32,5,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkAddress) Reset()         { *m = NetworkAddress{} }
func (m *NetworkAddress) String() string { return proto.CompactTextString(m) }
func (*NetworkAddress) ProtoMessage()    {}
func (*NetworkAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}
func (m *NetworkAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkAddress.Unmarshal(m, b)
}
func (m *NetworkAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkAddress.Marshal(b, m, deterministic)
}
func (m *NetworkAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkAddress.Merge(m, src)
}
func (m *NetworkAddress) XXX_Size() int {
	return xxx_messageInfo_NetworkAddress.Size(m)
}
func (m *NetworkAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkAddress.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkAddress proto.InternalMessageInfo

func (m *NetworkAddress) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *NetworkAddress) GetStream() uint32 {
	if m != nil {
		return m.Stream
	}
	return 0
}

func (m *NetworkAddress) GetServices() uint64 {
	if m != nil {
		return m.Services
	}
	return 0
}

func (m *NetworkAddress) GetIpAddress() []byte {
	if m != nil {
		return m.IpAddress
	}
	return nil
}

func (m *NetworkAddress) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type Version struct {
	Version              int32           `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Services             uint64          `protobuf:"varint,2,opt,name=services,proto3" json:"services,omitempty"`
	Timestamp            int64           `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Receiver             *NetworkAddress `protobuf:"bytes,4,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Sender               *NetworkAddress `protobuf:"bytes,5,opt,name=sender,proto3" json:"sender,omitempty"`
	Nonce                uint64          `protobuf:"varint,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	UserAgent            string          `protobuf:"bytes,7,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	StreamNumbers        []int64         `protobuf:"varint,8,rep,packed,name=stream_numbers,json=streamNumbers,proto3" json:"stream_numbers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}
func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Version) GetServices() uint64 {
	if m != nil {
		return m.Services
	}
	return 0
}

func (m *Version) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Version) GetReceiver() *NetworkAddress {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *Version) GetSender() *NetworkAddress {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Version) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Version) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *Version) GetStreamNumbers() []int64 {
	if m != nil {
		return m.StreamNumbers
	}
	return nil
}

type VersionRequest struct {
	Version              *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionRequest) Reset()         { *m = VersionRequest{} }
func (m *VersionRequest) String() string { return proto.CompactTextString(m) }
func (*VersionRequest) ProtoMessage()    {}
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{2}
}
func (m *VersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionRequest.Unmarshal(m, b)
}
func (m *VersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionRequest.Marshal(b, m, deterministic)
}
func (m *VersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionRequest.Merge(m, src)
}
func (m *VersionRequest) XXX_Size() int {
	return xxx_messageInfo_VersionRequest.Size(m)
}
func (m *VersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VersionRequest proto.InternalMessageInfo

func (m *VersionRequest) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type VersionResponse struct {
	Version              *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionResponse) Reset()         { *m = VersionResponse{} }
func (m *VersionResponse) String() string { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()    {}
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{3}
}
func (m *VersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionResponse.Unmarshal(m, b)
}
func (m *VersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionResponse.Marshal(b, m, deterministic)
}
func (m *VersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionResponse.Merge(m, src)
}
func (m *VersionResponse) XXX_Size() int {
	return xxx_messageInfo_VersionResponse.Size(m)
}
func (m *VersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionResponse proto.InternalMessageInfo

func (m *VersionResponse) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func init() {
	proto.RegisterType((*NetworkAddress)(nil), "message.NetworkAddress")
	proto.RegisterType((*Version)(nil), "message.Version")
	proto.RegisterType((*VersionRequest)(nil), "message.VersionRequest")
	proto.RegisterType((*VersionResponse)(nil), "message.VersionResponse")
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1) }

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 362 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x41, 0x6b, 0xea, 0x40,
	0x10, 0xc7, 0x5f, 0x8c, 0x49, 0xcc, 0xf8, 0xd4, 0xc7, 0xf2, 0x78, 0x2e, 0xf2, 0x0a, 0x21, 0x50,
	0x08, 0x3d, 0x58, 0xd0, 0x6b, 0x5b, 0xb0, 0xd7, 0x82, 0x87, 0x3d, 0xf4, 0xd0, 0x8b, 0xc4, 0x38,
	0x48, 0x28, 0x49, 0xb6, 0x3b, 0xab, 0xfd, 0x10, 0xfd, 0x10, 0xfd, 0xaa, 0x25, 0xbb, 0x31, 0xd6,
	0x0a, 0x85, 0x9e, 0x32, 0xf3, 0xcf, 0x7f, 0x76, 0x7e, 0xfc, 0x77, 0x21, 0x54, 0x32, 0x9b, 0x4a,
	0x55, 0xe9, 0x8a, 0x05, 0x05, 0x12, 0xa5, 0x5b, 0x8c, 0xdf, 0x1c, 0x18, 0x2e, 0x51, 0xbf, 0x56,
	0xea, 0x79, 0xb1, 0xd9, 0x28, 0x24, 0x62, 0x0c, 0xba, 0x3a, 0x2f, 0x90, 0x3b, 0x91, 0x93, 0x74,
	0x85, 0xa9, 0xd9, 0x3f, 0xf0, 0x49, 0x2b, 0x4c, 0x0b, 0xde, 0x89, 0x9c, 0x64, 0x20, 0x9a, 0x8e,
	0x4d, 0xa0, 0x47, 0xa8, 0xf6, 0x79, 0x86, 0xc4, 0x5d, 0xe3, 0x6f, 0x7b, 0x76, 0x01, 0x90, 0xcb,
	0x55, 0x6a, 0x4f, 0xe5, 0xdd, 0xc8, 0x49, 0x7e, 0x8b, 0x30, 0x97, 0x9f, 0xd6, 0xc8, 0x4a, 0x69,
	0xee, 0x45, 0x4e, 0x32, 0x12, 0xa6, 0x8e, 0xdf, 0x3b, 0x10, 0x3c, 0xa2, 0xa2, 0xbc, 0x2a, 0x19,
	0x87, 0x60, 0x6f, 0x4b, 0x43, 0xe2, 0x89, 0x43, 0x7b, 0xb2, 0xb4, 0xf3, 0x65, 0xe9, 0x7f, 0x08,
	0x6b, 0x60, 0xd2, 0x69, 0x21, 0x0d, 0x91, 0x2b, 0x8e, 0x02, 0x9b, 0x43, 0x4f, 0x61, 0x86, 0xf9,
	0x1e, 0x95, 0x01, 0xea, 0xcf, 0xc6, 0xd3, 0x26, 0x89, 0xe9, 0x69, 0x0a, 0xa2, 0x35, 0xb2, 0x6b,
	0xf0, 0x09, 0xcb, 0x0d, 0x2a, 0x83, 0xfa, 0xcd, 0x48, 0x63, 0x63, 0x7f, 0xc1, 0x2b, 0xab, 0x32,
	0x43, 0xee, 0x1b, 0x38, 0xdb, 0xd4, 0x71, 0xec, 0x08, 0xd5, 0x2a, 0xdd, 0x62, 0xa9, 0x79, 0x10,
	0x39, 0x49, 0x28, 0xc2, 0x5a, 0x59, 0xd4, 0x02, 0xbb, 0x84, 0xa1, 0xcd, 0x74, 0x55, 0xee, 0x8a,
	0x35, 0x2a, 0xe2, 0xbd, 0xc8, 0x4d, 0x5c, 0x31, 0xb0, 0xea, 0xd2, 0x8a, 0xf1, 0x0d, 0x0c, 0x9b,
	0x80, 0x04, 0xbe, 0xec, 0x90, 0x34, 0xbb, 0x3a, 0xcd, 0xa9, 0x3f, 0xfb, 0xd3, 0xf2, 0x1d, 0x9c,
	0x07, 0x43, 0x7c, 0x0b, 0xa3, 0x76, 0x9a, 0x64, 0x55, 0x12, 0xfe, 0x64, 0x7c, 0xf6, 0x00, 0x61,
	0xa3, 0xa1, 0x62, 0x77, 0xc7, 0xab, 0x1a, 0x9f, 0x8d, 0x58, 0xb6, 0x09, 0x3f, 0xff, 0x61, 0xd7,
	0xc6, 0xbf, 0xee, 0x83, 0x27, 0xcf, 0xbc, 0xc5, 0xb5, 0x6f, 0x3e, 0xf3, 0x8f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xc1, 0x46, 0x1a, 0xec, 0x9f, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VersionerClient is the client API for Versioner service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VersionerClient interface {
	Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error)
}

type versionerClient struct {
	cc *grpc.ClientConn
}

func NewVersionerClient(cc *grpc.ClientConn) VersionerClient {
	return &versionerClient{cc}
}

func (c *versionerClient) Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/message.Versioner/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VersionerServer is the server API for Versioner service.
type VersionerServer interface {
	Version(context.Context, *VersionRequest) (*VersionResponse, error)
}

func RegisterVersionerServer(s *grpc.Server, srv VersionerServer) {
	s.RegisterService(&_Versioner_serviceDesc, srv)
}

func _Versioner_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersionerServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.Versioner/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersionerServer).Version(ctx, req.(*VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Versioner_serviceDesc = grpc.ServiceDesc{
	ServiceName: "message.Versioner",
	HandlerType: (*VersionerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _Versioner_Version_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}
